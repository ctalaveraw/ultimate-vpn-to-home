---
- name: Make sure the Wireguard container is created and running
  register: wireguard_result
  retries: 5
  until: wireguard_result is succeeded
  community.general.docker_container:
    name: "wg-easy"
    image: "weejewel/wg-easy"
    pull: yes
    sysctls:
      "net.ipv4.conf.all.src_valid_mark": "1"
      "net.ipv4.ip_forward": "1"
    capabilities:
      - net_admin
      - sys_module
    state: "started"
    env:
      "PASSWORD": "{{ user_password }}"
      "WG_HOST": "{{ wireguard_host }}"
      "WG_PORT": "{{ wireguard_port }}"
      "WG_PERSISTENT_KEEPALIVE": "25"
      "WG_DEFAULT_DNS": "{{ wireguard_client_ip_dns }}"
    ports:
      - "{{ wireguard_port }}:{{ wireguard_port }}/udp"
      - "{{ wireguard_port_ui }}:{{ wireguard_port_ui }}/tcp"
    volumes:
      - "{{ docker_dir }}/wg-easy:/etc/wireguard"
    restart_policy: unless-stopped
    labels:
      traefik.enable: "{{ wireguard_available_externally | string }}"
      traefik.http.routers.wireguard.rule: "Host(`{{ wireguard_hostname }}.{{ root_host }}`)"
      traefik.http.routers.wireguard.tls.certresolver: "letsencrypt"
      traefik.http.routers.wireguard.tls.domains[0].main: "{{ root_host }}"
      traefik.http.routers.wireguard.tls.domains[0].sans: "*.{{ root_host }}"
      traefik.http.services.wireguard.loadbalancer.server.port: "{{ wireguard_port_ui }}"
